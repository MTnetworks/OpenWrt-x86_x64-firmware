#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

#==========================
# 工作流的名字（随便写）
name: Build OpenWrt
#==========================
env:
  #==========================
  # 编译前运行的脚本
  DIY_SH: diy.sh
  #==========================
  # Specify here the OpenWrt Repo URL and Branch
  # 在这里指定你的OpenWrt的仓库地址URL和分支
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  #==========================
  # Specify here your config file
  # 在这里指定你的配置文件名
  CONFIG_FILE: "ying.config"
  #==========================
  # GITEE_TOKEN: ${{ secrets.gitee }}
on:
  push:
    paths:
      #==========================
      - "ying.config"
      # 改成和上方CONFIG_FILE 一样
      #==========================
    branches:
      - master
  #==========================
  #取消下方注释 = 发布release就编译
  release:
    types: [published]
  #==========================
  #取消下方注释 = 每天凌晨4点编译
  schedule:
    - cron: 0 20 * * *
#==========================
#取消下方注释 = 点[★star]一键编译
  watch:
    types: [started]
#==========================
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: Checkout 抓取当前仓库
        uses: actions/checkout@master

      - name: Space cleanup 腾出空间+安装包
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* php*
          sudo -E apt update
          sudo -E apt -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib linux-libc-dev
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

      - name: Clone source code 抓取仓库
        run: git clone $REPO_URL -b $REPO_BRANCH openwrt
        
      - name: Update package 更新插件源码
        working-directory: ./openwrt
        run: |            
          git clone https://github.com/Leo-Jo-My/luci-theme-opentomato.git package/lean/luci-theme-opentomato  
      
      - name: Update feeds 更新feeds
        run: cd openwrt && ./scripts/feeds update -a

      - name: Install feeds 安装feeds
        run: cd openwrt && ./scripts/feeds install -a

      - name: Load custom configuration 读取自定义配置
        run: |
          [ -e files ] && mv files openwrt/files
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
          chmod +x $DIY_SH
          cd openwrt
          ../$DIY_SH
          make defconfig

      - name: Download package 下载插件资源
        run: |
          cd openwrt && make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: Build 开始编译
        run: |
          cd openwrt
          echo "$(nproc) thread build."
          make -j$(nproc) || make -j1 V=s

      - name: Upload bin directory 上传bin文件夹
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt_bin bin文件夹
          path: openwrt/bin

      - name: Organize files 整理文件
        run: |
          cd openwrt/bin/targets/*/*
          rm -rf packages
          echo "::set-env name=FIRMWARE::$(pwd)"

      - name: Upload firmware 上传固件
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt_firmware openwrt固件
          path: ${{ env.FIRMWARE }}
        
      - name: Upload release
        uses: yakuhzi/action-release@master
        with:
          file: openwrt/bin/targets/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
